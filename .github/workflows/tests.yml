name: Tests

on:
  push:
    branches: [ main ]
    paths-ignore: [ 'dist/*.js' ]
  pull_request:
    branches: [ main ]

jobs:
  deploy-action-code:
    if: github.event_name == 'push'
    name: Deploy Action Code
    runs-on: ubuntu-latest
    steps:
      - name: Install depenedencies
        run: sudo npm i -g typescript @vercel/ncc
      - uses: actions/checkout@v2.3.4
        with:
          token: ${{secrets.BOT_TOKEN}}
      - name: Generate action code
        run: npm run deploy
      - name: Configure repository
        run: |
          git config user.name "${{secrets.BOT_USERNAME}}"
          git config user.email "${{secrets.BOT_USERNAME}}@users.noreply.github.com"
      - name: Commit changes
        run: |
          if ! git diff --exit-code --quiet; then
            git add .
            git commit -m "[AUTO] Update generated code"
            git push
          fi

  test-defaults:
    needs: deploy-action-code
    if: always() && !failure() && !cancelled()
    name: Test Default Inputs
    strategy:
      matrix:
        os: [ macos-11, ubuntu-latest ]
        cov-format: [ 'txt', 'lcov' ]
    runs-on: ${{matrix.os}}
    steps:
      - uses: maxim-lobanov/setup-xcode@v1.3.0
        if: runner.os == 'macOS'
        with:
          xcode-version: ^12.4
      - name: Install Swift
        if: runner.os == 'Linux'
        uses: sersoft-gmbh/swifty-linux-action@v1.3
        with:
          release-version: 5.4
          github-token: ${{secrets.GITHUB_TOKEN}}
      - name: Install dependencies
        if: github.event_name == 'pull_request'
        run: sudo npm i -g typescript @vercel/ncc
      - uses: actions/checkout@v2
      - name: Generate action code
        if: github.event_name == 'pull_request'
        run: npm run deploy
      - uses: sersoft-gmbh/xcodebuild-action@v1.6.0
        if: runner.os == 'macOS'
        with:
          spm-package: __test__/TestProject
          scheme: TestProject-Package
          action: test
          enable-code-coverage: true
          parallel-testing-enabled: true
      - run: swift test --parallel --enable-code-coverage
        working-directory: __test__/TestProject
      - run: ln -s __test__/TestProject/.build .build
      - uses: sersoft-gmbh/swift-coverage-action@main
        if: github.event_name == 'push'
      - uses: './'
        if: github.event_name == 'pull_request'
      - name: Check for produced coverage files
        run: | # check that the directory exists and contains files
          test -d '.swiftcov' && \
          test "$(find '.swiftcov' -name '*.txt')" != ''

  test-customized:
    needs: deploy-action-code
    if: always() && !failure() && !cancelled()
    name: Test Customized Inputs
    strategy:
      matrix:
        os: [ macos-11, ubuntu-latest ]
        cov-format: [ 'txt', 'lcov' ]
    env:
      INPUT_DERIVED_DATA: .derived-data
      INPUT_SEARCH_PATHS: |
        __test__/TestProject/.build
        .derived-data
      INPUT_TARGET_NAME_FILTER: TestProject(1|Package).*
      INPUT_OUTPUT_FOLDER: .swiftcov-test
    runs-on: ${{matrix.os}}
    steps:
      - uses: maxim-lobanov/setup-xcode@v1.3.0
        if: runner.os == 'macOS'
        with:
          xcode-version: ^12.4
      - name: Install Swift
        if: runner.os == 'Linux'
        uses: sersoft-gmbh/swifty-linux-action@v1.3
        with:
          release-version: 5.4
          github-token: ${{secrets.GITHUB_TOKEN}}
      - name: Install dependencies
        if: github.event_name == 'pull_request'
        run: sudo npm i -g typescript @vercel/ncc
      - uses: actions/checkout@v2
      - name: Generate action code
        if: github.event_name == 'pull_request'
        run: npm run deploy
      - uses: sersoft-gmbh/xcodebuild-action@v1.6.0
        if: runner.os == 'macOS'
        with:
          spm-package: __test__/TestProject
          scheme: TestProject-Package
          action: test
          enable-code-coverage: true
          parallel-testing-enabled: true
          derived-data-path: ${{env.INPUT_DERIVED_DATA}}
      - run: swift test --parallel --enable-code-coverage
        working-directory: __test__/TestProject
      - uses: sersoft-gmbh/swift-coverage-action@main
        if: github.event_name == 'push'
        with:
          format: ${{matrix.cov-format}}
          search-paths: ${{env.INPUT_SEARCH_PATHS}}
          output: ${{env.INPUT_OUTPUT_FOLDER}}
          target-name-filter: ${{env.INPUT_TARGET_NAME_FILTER}}
      - uses: './'
        if: github.event_name == 'pull_request'
        with:
          format: ${{matrix.cov-format}}
          search-paths: ${{env.INPUT_SEARCH_PATHS}}
          output: ${{env.INPUT_OUTPUT_FOLDER}}
          target-name-filter: ${{env.INPUT_TARGET_NAME_FILTER}}
      - name: Check for produced coverage files
        run: | # check that the directory exists and contains files
          test -d '${{env.INPUT_OUTPUT_FOLDER}}' && { \
            { \
              test '${{runner.os}}' == 'macOS' && \
              test "$(find '${{env.INPUT_OUTPUT_FOLDER}}' -name 'TestProject1*.${{matrix.cov-format}}')" != ''; \
            } \
            || \
            { \
              test '${{runner.os}}' == 'Linux' && \
              test "$(find '${{env.INPUT_OUTPUT_FOLDER}}' -name 'TestProjectPackage*.${{matrix.cov-format}}')" != ''; \
            }; \
          } && \
          test "$(find '${{env.INPUT_OUTPUT_FOLDER}}' -name 'TestProject2*.${{matrix.cov-format}}')" == ''
